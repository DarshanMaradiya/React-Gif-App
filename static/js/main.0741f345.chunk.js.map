{"version":3,"sources":["components/Tag_V1.jsx","useGif.js","components/Random_V2.jsx","images/LinkCopied.png","App.js","index.js"],"names":["Tag","props","useState","gif","setGif","tag","setTag","fetchGif","a","console","log","url","process","axios","get","data","imgSrc","images","downsized_large","useEffect","className","src","width","height","onClick","alt","value","onChange","e","target","useGif","App","linkCopied","setLinkCopied","displayMsg","text","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","textToClipboard","setTimeout","style","LinkCopiedImg","ReactDOM","render","getElementById"],"mappings":"sNAmCeA,EA9BH,SAACC,GAAW,IAAD,EACGC,mBAAS,8CADZ,mBACZC,EADY,KACPC,EADO,OAEGF,mBAAS,YAFZ,mBAEZG,EAFY,KAEPC,EAFO,KAIbC,EAAQ,uCAAG,WAAOF,GAAP,qBAAAG,EAAA,6DACbC,QAAQC,IAAI,gBAAkBL,EAAM,QAC9BM,EAFO,uDANLC,mCAMK,gBAE8DP,GAF9D,SAGUQ,IAAMC,IAAIH,GAHpB,gBAGLI,EAHK,EAGLA,KACFC,EAASD,EAAKA,KAAKE,OAAOC,gBAAgBP,IAChDP,EAAOY,GALM,2CAAH,sDAQdG,qBAAU,WACNZ,EAASF,KACV,IAMH,OACI,sBAAKe,UAAU,YAAf,UACI,0CAAaf,EAAb,WACA,qBAAKgB,IAAMlB,EAAMmB,MAAM,MAAMC,OAAO,MAAMC,QAAU,kBAAMvB,EAAMuB,QAAQrB,IAAOsB,IAAI,mBACnF,uBAAOC,MAAQrB,EAAMsB,SAAW,SAACC,GAAD,OAAOtB,EAAOsB,EAAEC,OAAOH,UACvD,wBAAQF,QATI,WAChBjB,EAASF,IAQL,8BC1BNM,EAAG,uDADOC,oCAgBDkB,EAbA,SAACzB,GAAS,IAAD,EACEH,mBAAS,8CADX,mBACbC,EADa,KACRC,EADQ,KAUpB,MAAO,CAAED,MAAKI,SAPA,uCAAG,WAAOF,GAAP,mBAAAG,EAAA,6DACbC,QAAQC,IAAI,gBAAkBL,EAAM,QADvB,SAEUQ,IAAMC,IAAIT,EAAG,UAAMM,EAAN,gBAAiBN,GAAQM,GAFhD,gBAELI,EAFK,EAELA,KACFC,EAASD,EAAKA,KAAKE,OAAOC,gBAAgBP,IAChDP,EAAOY,GAJM,2CAAH,wDCUHhB,EAhBH,SAACC,GAAW,IAAD,EACO6B,IAAlB3B,EADW,EACXA,IAAKI,EADM,EACNA,SAMb,OAJAY,qBAAU,WACNZ,MACD,IAGC,sBAAKa,UAAU,YAAf,UACI,8CACA,qBAAKC,IAAMlB,EAAMmB,MAAM,MAAMC,OAAO,MAAMC,QAAU,kBAAMvB,EAAMuB,QAAQrB,IAAOsB,IAAI,mBACnF,wBAAQD,QAAUjB,EAAlB,8BCdG,MAA0B,uCC6C1BwB,G,MAvCH,WAAO,IAAD,EACsB7B,oBAAS,GAD/B,mBACP8B,EADO,KACKC,EADL,KAGdd,qBAAU,WACNc,EAAcD,KACf,CAACA,IAEJ,IASME,EAAa,SAACC,GAChBF,GAAc,GAVM,SAACE,GACrB,IAAIC,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMV,MAAQS,EACdC,EAAMK,SACNJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,GAK1BQ,CAAgBT,GAChBU,YAAW,kBAAMZ,GAAc,KAAQ,MAQ3C,OACI,qCACI,yCACA,sBAAKb,UAAU,iBAAf,UACI,cAAC,EAAD,CAAKI,QAAUU,IACdF,GAAc,qBAAKc,MAVjB,CACXxB,MAAO,QACPC,OAAQ,SAQqCF,IAAM0B,EAAgBtB,IAAI,iBAC/D,cAAC,EAAD,CAAQD,QAAUU,YCnClCc,IAASC,OAAO,cAAC,EAAD,IAASZ,SAASa,eAAe,W","file":"static/js/main.0741f345.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\n\r\nconst Tag = (props) => {\r\n    const [gif, setGif] = useState('https://wallpapercave.com/wp/wp2757847.gif');\r\n    const [tag, setTag] = useState('deadpool');\r\n\r\n    const fetchGif = async (tag) => {\r\n        console.log(\"Fetching new \" + tag + \" gif\");\r\n        const url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}&tag=${tag}`;\r\n        const { data } = await axios.get(url);\r\n        const imgSrc = data.data.images.downsized_large.url;\r\n        setGif(imgSrc);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGif(tag);\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        fetchGif(tag);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1> Random {tag} Gif </h1>\r\n            <img src={ gif } width=\"500\" height=\"400\" onClick={ () => props.onClick(gif) } alt=\"Random Tag gif\"/>\r\n            <input value={ tag } onChange={ (e) => setTag(e.target.value) } />\r\n            <button onClick={ handleClick }>Get new Gif!</button>      \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tag;","import {useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\nconst url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n\r\nconst useGif = (tag) => {\r\n    const [gif, setGif] = useState('https://wallpapercave.com/wp/wp2757847.gif');\r\n\r\n    const fetchGif = async (tag) => {\r\n        console.log(\"Fetching new \" + tag + \" gif\");\r\n        const { data } = await axios.get(tag ? `${url}&tag=${tag}` : url);\r\n        const imgSrc = data.data.images.downsized_large.url;\r\n        setGif(imgSrc);\r\n    }\r\n    \r\n    return { gif, fetchGif };\r\n};\r\n\r\nexport default useGif;","import React, { useEffect } from 'react';\r\nimport useGif from '../useGif';\r\n\r\nconst Tag = (props) => {\r\n    const { gif, fetchGif } = useGif();\r\n    \r\n    useEffect(() => {\r\n        fetchGif();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1> Random Gif </h1>\r\n            <img src={ gif } width=\"500\" height=\"400\" onClick={ () => props.onClick(gif) } alt=\"Random Tag gif\"/>\r\n            <button onClick={ fetchGif }>Get new Gif!</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tag;","export default __webpack_public_path__ + \"static/media/LinkCopied.cb8858cc.png\";","import React, {useState, useEffect } from 'react';\r\nimport Tag from './components/Tag_V1';\r\nimport Random from './components/Random_V2';\r\nimport LinkCopiedImg from './images/LinkCopied.png';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLinkCopied(linkCopied);\r\n    }, [linkCopied]);\r\n\r\n    const textToClipboard = (text) => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = text;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n    }\r\n\r\n    const displayMsg = (text) => {\r\n        setLinkCopied(true);\r\n        textToClipboard(text);\r\n        setTimeout(() => setLinkCopied(false), 2000);\r\n    };\r\n\r\n    const styles = {\r\n        width: \"150px\",\r\n        height: \"150px\"\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h1>Gif App</h1>\r\n            <div className=\"main-container\">\r\n                <Tag onClick={ displayMsg } />\r\n                {linkCopied && <img style={ styles } src={ LinkCopiedImg } alt=\"Link Copied!\"/>}\r\n                <Random onClick={ displayMsg } />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}